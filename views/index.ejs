<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat App</title>
    <!-- style -->
    <link rel="stylesheet" href="/style.css">

    <!-- Bootstrap 5-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
</head>

<body>
    <main class="container">
        <h1>Chat boX</h1>
        <h2>
            <%= id %>
        </h2>

        <h4 id="name_id">Your Name</h4>
        <div class="container chat-box border border-secondary-subtle position-relative" style="max-width: 550px; ">
            <ul id="msgList">
            </ul>
            <div class="input-group position-absolute bottom-0 end-0 p-2">
                <input type="text" class="form-control" id="newMsg" placeholder="message..."
                    aria-label="Recipient's username" aria-describedby="button-addon2">

                <button class="send-btn btn btn-outline-secondary" type="button" id="button-addon2">send
                    <svg style="transform: rotate(45deg);" xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                        fill="currentColor" class="bi bi-send-fill" viewBox="0 0 16 16">
                        <path
                            d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083l6-15Zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 0-.154-.154l-.338-.215 7.494-7.494 1.178-.471-.47 1.178Z" />
                    </svg>
                </button>
            </div>
        </div>
    </main>
    <div>
        <!-- Modal -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
            aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>

                    </div>
                    <div class="modal-body">
                        <input type="text" placeholder="enter your name.." class="form-control" id="modal-name-input" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id='modal-close-btn'
                            data-bs-dismiss="modal">Ok</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- modal ends-->


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
        crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"
        integrity="sha384-fbbOQedDUMZZ5KreZpsbe1LCZPVmfTnH7ois6mU1QK+m14rQ1l2bGBq41eYeM/fS"
        crossorigin="anonymous"></script>

    <!-- <script>
        var modalCloseBtn = document.getElementById('modal-close-btn');
        var modalNameInput = document.getElementById('modal-name-input');
        var name_here = document.getElementById('name_id');

        let name;
        window.onload = function () {
            // Get the modal element by ID
            var modal = document.getElementById('staticBackdrop');
            modalCloseBtn.disabled = true

            // Create a new Bootstrap Modal object
            var bootstrapModal = new bootstrap.Modal(modal);

            // Show the modal
            // bootstrapModal.show();
        };

        modalNameInput.addEventListener('input', (e) => {
            if (e.target.value.length > 1) {
                name = e.target.value
                modalCloseBtn.disabled = false
            }
            else {
                modalCloseBtn.disabled = true
            }
        })

        modalCloseBtn.addEventListener('click', () => {
            name_here.innerText = name

        })

    </script> -->

    <script src="/socket.io/socket.io.js"></script>


    <script>
        var socket = io();

        const MsgSendBtn = document.querySelector('.send-btn')
        const inputMsg = document.getElementById('newMsg');
        const msgList = document.getElementById('msgList');

        var modalCloseBtn = document.getElementById('modal-close-btn');
        var modalNameInput = document.getElementById('modal-name-input');
        var name_here = document.getElementById('name_id');

        const roomId = window.location.pathname.split('/')[2]

        let name;



        window.onload = function () {
            socket.emit('join_room', roomId)
            // Get the modal element by ID
            var modal = document.getElementById('staticBackdrop');
            modalCloseBtn.disabled = true

            // Create a new Bootstrap Modal object
            var bootstrapModal = new bootstrap.Modal(modal);

            // Show the modal
            bootstrapModal.show();
        };

        modalNameInput.addEventListener('input', (e) => {
            if (e.target.value.length > 1) {
                name = e.target.value
                modalCloseBtn.disabled = false
            }
            else {
                modalCloseBtn.disabled = true
            }
        })


        modalCloseBtn.addEventListener('click', () => {
            name_here.innerText = name
            socket.emit('join_room', { roomId, username: name })
        })


        MsgSendBtn.addEventListener('click', () => {
            socket.emit('msg_send', {
                msg: inputMsg.value,
                username: name,
                roomid: roomId
            });
            inputMsg.value = ''
        })


        socket.on('msg_rcvd', (data) => {

            let itsMe = false
            let liMsg = document.createElement('li');
            if (data.username === name) {
                itsMe = true
            }
            itsMe && liMsg.setAttribute('class', 'its_me')
            liMsg.innerHTML = `${itsMe ? "" : data.username + ' : '}${data.msg}`;
            msgList.appendChild(liMsg);
            inputMsg.value = '';
        });

    </script>

</body>

</html>